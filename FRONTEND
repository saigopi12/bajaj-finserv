import React, { useState } from 'react';
import './App.css';

function App() {
  const [jsonInput, setJsonInput] = useState('');
  const [response, setResponse] = useState(null);
  const [selectedOptions, setSelectedOptions] = useState([]);
  const [error, setError] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const parsedData = JSON.parse(jsonInput);
      const response = await fetch('https://your-backend-url.herokuapp.com/bfhl', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(parsedData),
      });
      const data = await response.json();
      setResponse(data);
      setError('');
    } catch (err) {
      setError('Invalid JSON input');
      console.error('Error:', err);
    }
  };

  const handleOptionChange = (e) => {
    const value = e.target.value;
    setSelectedOptions(
      selectedOptions.includes(value)
        ? selectedOptions.filter(option => option !== value)
        : [...selectedOptions, value]
    );
  };

  const renderResponse = () => {
    if (!response) return null;

    return (
      <div className="response">
        {selectedOptions.includes('Alphabets') && (
          <div>
            <strong>Alphabets:</strong> {response.alphabets.join(', ')}
          </div>
        )}
        {selectedOptions.includes('Numbers') && (
          <div>
            <strong>Numbers:</strong> {response.numbers.join(', ')}
          </div>
        )}
        {selectedOptions.includes('Highest alphabet') && (
          <div>
            <strong>Highest Alphabet:</strong> {response.highest_alphabet.join(', ')}
          </div>
        )}
      </div>
    );
  };

  return (
    <div className="App">
      <h1>BFHL Challenge</h1>
      <form onSubmit={handleSubmit}>
        <textarea
          value={jsonInput}
          onChange={(e) => setJsonInput(e.target.value)}
          placeholder='Enter JSON input'
        />
        <button type="submit">Submit</button>
      </form>
      {error && <p className="error">{error}</p>}
      {response && (
        <>
          <h2>Response:</h2>
          <div className="dropdown">
            <label>
              <input
                type="checkbox"
                value="Alphabets"
                onChange={handleOptionChange}
              /> Alphabets
            </label>
            <label>
              <input
                type="checkbox"
                value="Numbers"
                onChange={handleOptionChange}
              /> Numbers
            </label>
            <label>
              <input
                type="checkbox"
                value="Highest alphabet"
                onChange={handleOptionChange}
              /> Highest Alphabet
            </label>
          </div>
          {renderResponse()}
        </>
      )}
    </div>
  );
}

export default App;
